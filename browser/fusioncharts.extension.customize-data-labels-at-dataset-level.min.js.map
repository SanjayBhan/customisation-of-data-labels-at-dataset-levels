{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///external \"FusionCharts\"","webpack:///./src/extension.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","require","define","amd","a","i","window","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","_FusionCharts","_extension","FusionCharts","addDep","extension","startsRGBA","cleanColorCode","COLOR_WHITE","UNDEF","DASH_DEF","BLANK","COMMA","POSITION_MIDDLE","POSITION_START","POSITION_END","defined","obj","hiddenStr","visibleStr","chartList","getDashStyle","len","gap","apply","getFirstValue","arg","arguments","length","pluck","undefined","pluckNumber","isNaN","Number","convertColor","color","alpha","rgba","R","G","B","colorStr","tempArr","match","split","slice","indexOf","parseInt","replace","charAt","_drawLabel","dataSet","this","chart","getFromEnv","chartConf","config","JSONData","animationManager","canvasConf","getChildren","style","dataLabelStyle","setDataArr","data","categories","is3D","isStacked","isstacked","catLen","dataSetLen","dataStore","getData","SmartLabel","dataObj","attr","yDepth","xDepth","numberFormatter","j","displayValue","setData","placeValuesInside","placevaluesinside","canvasWidth","canvasLeft","graphic","height","gutter","valuePadding","valuepadding","textY","textX","outsideColSpace","isNegative","yPos","xPos","width","setValue","dataLabelContainer","getContainer","textAnchor","textWidth","xAdjust","chartAttrs","fillColor","backgroundColor","fontBdrColor","borderColor","borderThickness","borderPadding","borderRadius","borderDash","GUTTER_4","skipInfo","getSkippingInfo","skippingApplied","plotDrawArray","labelDraw","plotDrawArrayLength","plotLabel","plotLabelCheck","dim","tempGraphics","visible","getState","callback","hide","show","setStyle","labelSkip","graphics","label","_yPos","_xPos","getCleanValue","_height","_width","showValue","valuefontcolor","inCancolor","valuefontalpha","valuealpha","valuebgcolor","valuebgalpha","valuebordercolor","valueborderalpha","valueborderthickness","valueborderpadding","valueborderradius","valueborderdashed","valueborderdashlen","valueborderdashgap","text","fill","text-bound","line-height","lineHeight","visibility","getOriSize","Math","max","min","x","y","opacity","setAnimation","el","container","component","labelDrawn","addEventListener","event","sender","getType","_parseLabelAttributes","parseLabelAttributes","props","getName","drawLabel","type","requiresFusionCharts"],"mappings":"CAAA,SAAAA,iCAAAC,KAAAC,SACA,UAAAC,UAAA,iBAAAC,SAAA,SACAA,OAAAD,QAAAD,QAAAG,QAAA,sBACA,UAAAC,SAAA,YAAAA,OAAAC,IACAD,QAAA,gBAAAJ,aACA,CACA,IAAAM,SAAAL,UAAA,SAAAD,QAAAG,QAAA,iBAAAH,QAAAD,KAAA,iBACA,QAAAQ,KAAAD,UAAAL,UAAA,SAAAA,QAAAF,MAAAQ,GAAAD,EAAAC,KAPA,CASCC,OAAA,SAAAC,gCACD,yBCTA,IAAAC,oBAGA,SAAAC,oBAAAC,UAGA,GAAAF,iBAAAE,UAAA,CACA,OAAAF,iBAAAE,UAAAX,QAGA,IAAAC,OAAAQ,iBAAAE,WACAL,EAAAK,SACAC,EAAA,MACAZ,YAIAa,QAAAF,UAAAG,KAAAb,OAAAD,QAAAC,cAAAD,QAAAU,qBAGAT,OAAAW,EAAA,KAGA,OAAAX,OAAAD,QAKAU,oBAAAK,EAAAF,QAGAH,oBAAAM,EAAAP,iBAGAC,oBAAAO,EAAA,SAAAjB,QAAAkB,KAAAC,QACA,IAAAT,oBAAAU,EAAApB,QAAAkB,MAAA,CACAG,OAAAC,eAAAtB,QAAAkB,MAA0CK,WAAA,KAAAC,IAAAL,WAK1CT,oBAAAe,EAAA,SAAAzB,SACA,UAAA0B,SAAA,aAAAA,OAAAC,YAAA,CACAN,OAAAC,eAAAtB,QAAA0B,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAtB,QAAA,cAAiD4B,MAAA,QAQjDlB,oBAAAmB,EAAA,SAAAD,MAAAE,MACA,GAAAA,KAAA,EAAAF,MAAAlB,oBAAAkB,OACA,GAAAE,KAAA,SAAAF,MACA,GAAAE,KAAA,UAAAF,QAAA,UAAAA,aAAAG,WAAA,OAAAH,MACA,IAAAI,GAAAX,OAAAY,OAAA,MACAvB,oBAAAe,EAAAO,IACAX,OAAAC,eAAAU,GAAA,WAAyCT,WAAA,KAAAK,cACzC,GAAAE,KAAA,UAAAF,OAAA,iBAAAM,OAAAN,MAAAlB,oBAAAO,EAAAe,GAAAE,IAAA,SAAAA,KAAgH,OAAAN,MAAAM,MAAqBC,KAAA,KAAAD,MACrI,OAAAF,IAIAtB,oBAAA0B,EAAA,SAAAnC,QACA,IAAAkB,OAAAlB,eAAA8B,WACA,SAAAM,aAA2B,OAAApC,OAAA,YAC3B,SAAAqC,mBAAiC,OAAArC,QACjCS,oBAAAO,EAAAE,OAAA,IAAAA,QACA,OAAAA,QAIAT,oBAAAU,EAAA,SAAAmB,OAAAC,UAAsD,OAAAnB,OAAAoB,UAAAC,eAAA5B,KAAAyB,OAAAC,WAGtD9B,oBAAAiC,EAAA,GAIA,OAAAjC,wCAAAkC,EAAA,+DClFA,IAAAC,cAAAnC,oBAAA,4DACA,IAAAoC,WAAApC,oBAAA,0IACAqC,0BAAaC,OAAOC,kDCFpBhD,OAAAD,QAAAQ,kHCCA,IAAI0C,WAAa,SACfC,eAAiB,UACjBC,YAAc,SACdC,aACAC,SAAW,OACXC,MAAQ,GACRC,MAAQ,IACRC,gBAAkB,SAClBC,eAAiB,QACjBC,aAAe,MACfC,QAAU,SAAVA,QAAoBC,KAClB,OAAOA,MAAQR,OAASQ,MAAQ,MAElCC,UAAY,SACZC,WAAa,UACbC,WAAa,QAAS,SAExB,SAASC,aAAcC,IAAKC,IAAKC,OAC/B,OAAQA,OAASA,QAAUf,OAAUa,IAAKC,KAAOb,SAGnD,SAASe,gBACP,IAAIC,IACFhE,EACAM,EACF,IAAKN,EAAI,EAAGM,EAAI2D,UAAUC,OAAQlE,EAAIM,EAAGN,GAAK,EAAG,CAC/CgE,IAAMC,UAAUjE,GAChB,IAAKgE,KAAOA,MAAQ,OAASA,MAAQ,EAAG,CACtC,SAEF,OAAOA,IAET,OAAOf,MAGT,SAASkB,QACP,IAAIH,IAAKhE,EAAGM,EACZ,IAAKN,EAAI,EAAGM,EAAI2D,UAAUC,OAAQlE,EAAIM,EAAGN,GAAK,EAAG,CAC/CgE,IAAMC,UAAUjE,GAChB,IAAKgE,KAAOA,MAAQ,OAASA,MAAQ,EAAG,CACtC,SAEF,OAAOA,IAET,OAAOI,UAGT,SAASC,cACP,IAAIL,IACFhE,EACAM,EAEF,IAAKN,EAAI,EAAGM,EAAI2D,UAAUC,OAAQlE,EAAIM,EAAGN,GAAK,EAAG,CAC/CgE,IAAMC,UAAUjE,GAChB,IAAKgE,KAAOA,MAAQ,OAASA,MAAQ,EAAG,CACtC,cACK,GAAIM,MAAMN,IAAMO,OAAOP,MAAO,CACnC,SAEF,OAAOA,IAET,OAAOI,UAGT,SAASI,aAAcC,MAAOC,MAAOC,MACnC,IAAIC,EAAI,EAAGC,EAAI,EAAGC,EAAI,EAAGC,SAAUC,QAEnC,GAAIL,MAAQA,KAAKM,MAAMrC,YAAa,CAClCoC,QAAUL,KAAKO,MAAMhC,OACrB0B,EAAII,QAAQ,GAAGG,MAAMH,QAAQ,GAAGI,QAAQ,KAAO,GAC/CP,EAAIG,QAAQ,GACZF,EAAIE,QAAQ,GACZ,IAAKN,OAASA,QAAU,EAAG,CACzBA,MAAQW,SAAUL,QAAQ,GAAGG,MAAM,EAAGH,QAAQ,GAAGI,QAAQ,MAAQ,IAAM,KAG3E,GAAIX,MAAO,CACT,GAAIA,MAAMQ,MAAMrC,YAAa,CAC3BoC,QAAUP,MAAMS,MAAMhC,OACtB0B,EAAII,QAAQ,GAAGG,MAAMH,QAAQ,GAAGI,QAAQ,KAAO,GAC/CP,EAAIG,QAAQ,GACZF,EAAIE,QAAQ,OACP,CACLD,SAAWN,MAAMa,QAAQzC,eAAgBI,OAAOiC,MAAMhC,OAAO,GAC7D,OAAQ6B,SAASb,QACf,KAAK,EACHa,SAAWA,SAASQ,OAAO,GAAKR,SAASQ,OAAO,GAAKR,SAASQ,OAAO,GACnER,SAASQ,OAAO,GAAKR,SAASQ,OAAO,GAAKR,SAASQ,OAAO,GAC5D,MACF,KAAK,EACH,MACF,QACER,UAAYA,SAAWjC,aAAaqC,MAAM,EAAG,GAC7C,MAEJP,EAAIS,SAASN,SAASI,MAAM,EAAG,GAAI,KAAO,EAC1CN,EAAIQ,SAASN,SAASI,MAAM,EAAG,GAAI,KAAO,EAC1CL,EAAIO,SAASN,SAASI,MAAM,EAAG,GAAI,KAAO,GAI9C,IAAKT,OAASA,QAAU,EAAG,CACzBA,MAAQ,IAEV,UAAWA,QAAU,SAAU,CAC7BA,MAAQA,MAAMQ,MAAMhC,OAAO,GAE7BwB,MAAQW,SAASX,MAAO,IAAM,IAC9B,MAAO,QAAUE,EAAI1B,MAAQ2B,EAAI3B,MAAQ4B,EAAI5B,MAAQwB,MAAQ,IAG/D,SAASc,aACP,IAAIC,QAAUC,KACZC,MAAQF,QAAQG,WAAW,SAC3BC,UAAYF,MAAMG,OAClBC,SAAWN,QAAQK,OAAOC,SAC1BC,iBAAmBP,QAAQG,WAAW,oBACtCK,WAAaN,MAAMO,YAAY,UAAU,GAAGJ,OAC5CK,MAAQR,MAAMG,OAAOM,eACrBC,WAAaN,SAASO,KACtBC,WAAaZ,MAAMG,OAAOS,WAC1BC,KAAOb,MAAMG,OAAOU,KACpBC,UAAYd,MAAMG,OAAOY,UACzBC,OAASJ,YAAcA,WAAWrC,OAClC0C,WAAaP,YAAcA,WAAWnC,OACtCN,IACAiD,UAAYpB,QAAQqB,UACpBC,WAAapB,MAAMC,WAAW,cAC9BoB,QACAC,KACAC,OAASjB,WAAWiB,OACpBC,OAASlB,WAAWkB,OACpBC,gBAAkBzB,MAAMC,WAAW,oBACnC5F,EACAqH,EACAC,aAAe,GACfC,QACAC,kBAAoB3B,UAAU4B,kBAC9BC,YAAc7B,UAAU6B,YACxBC,WAAa9B,UAAU8B,WACvBC,QACAC,OACAC,OAAS,EACTC,aAAelC,UAAUmC,aAAeF,OACxCG,MACAC,MACAC,gBACAC,WACAC,KACAC,KACAC,MACAC,SACAC,mBAAqBhD,QAAQiD,aAAa,cAC1CC,WACAC,UACAC,QACAC,WAAarD,QAAQG,WAAW,gBAChCmD,UACAC,gBACAC,aACAC,YACAC,gBACAC,cACAC,aACAC,WACAC,SAAW,EACXC,SAAW/D,QAAQgE,iBAAmBhE,QAAQgE,kBAC9CC,gBAAkBF,UAAYA,SAASE,gBACvCC,cAAiBH,UAAYA,SAASI,cACtCC,oBAAsBF,cAAczF,OACpC4B,OACAgE,UACAC,eACAC,IACAC,aACAC,QAAUzE,QAAQ0E,SAAS,WAC3BC,SAAW,SAAXA,WACE1E,KAAK2E,QAGTH,SAAWzB,mBAAmB6B,OAC9BvD,WAAWwD,SAASpE,OACpBvC,IAAM8F,gBAAkBG,oBAAuBlD,OAASC,WAAaD,OAASC,WAE9E,IAAKS,EAAI,EAAGA,EAAIzD,IAAKyD,IAAK,CACxBrH,EAAI0J,gBAAkBC,cAActC,GAAKA,EACzCL,QAAUH,UAAU7G,GACpB8F,OAASkB,SAAWA,QAAQlB,OAC5B0C,SAAW1C,QAAUA,OAAO0C,SAE5B,GAAIxB,UAAYjE,OAASyF,WAAazF,OAASyF,WAAa,MAAQ1C,OAAO0E,YAAc,KAAM,CAC7FP,aAAejD,SAAWA,QAAQyD,SAClC,GAAIR,aAAc,CAChBA,aAAaS,OAAST,aAAaS,MAAML,OAG3CvE,eAAkBA,OAAO0E,UAEzB,SAEF5C,QAAUZ,QAAQyD,SAGlB,IAAK7C,QAAS,CACZ,SAGFL,QAAUlB,WAAWrG,GACrBqI,KAAOrB,QAAQ2D,MACfrC,KAAOtB,QAAQ4D,MACfpC,SAAWpB,gBAAgByD,cAActD,QAAQjG,OACjD8G,WAAa/D,YAAYmE,UAAY,EACrCX,OAASb,QAAQ8D,QACjBvC,MAAQvB,QAAQ+D,OAEhBpC,WAAalC,UAAYtD,gBAAmBiF,WAEzCZ,kBAAoBpE,eAAiBC,aACrCmE,kBAAoBnE,aAAeD,eACtCkE,aAAexB,OAAOwB,aACtByC,eAAiBnC,QAAQ8C,MAEzB,GAAI5E,OAAOkF,WAAa1H,QAAQgE,eAAiBA,eAAiBrE,OAASuF,WAAa,KAAM,CAC5FO,UAAYvE,aAAaL,MAAM4B,SAASkF,eAAgBnC,WAAWmC,eAAgB9E,MAAM+E,YACvF7G,YAAY0B,SAASoF,eAAgBpF,SAASqF,WAAYtC,WAAWqC,eAAgBrC,WAAWsC,WAAY,MAE9GpC,gBAAmBjD,SAASsF,cAAgBvC,WAAWuC,aACrD7G,aAAaL,MAAM4B,SAASsF,aAAcvC,WAAWuC,cAAehH,YAAY0B,SAASuF,aACvFvF,SAASqF,WAAYtC,WAAWwC,aAAcxC,WAAWsC,WAAY,MAAQnI,MAEjFgG,aAAelF,cAAcgC,SAASwF,iBAAkBzC,WAAWyC,iBAAkBtI,OACrFiG,YAAcD,aAAezE,aAC3ByE,aAAc5E,YAAY0B,SAASyF,iBAAkBzF,SAASqF,WAC5DtC,WAAW0C,iBAAkB1C,WAAWsC,WAAY,MAAQnI,MAEhEkG,gBAAkB9E,YAAY0B,SAAS0F,qBAAsB3C,WAAW2C,qBAAsB,GAC9FrC,cAAgB/E,YAAY0B,SAAS2F,mBAAoB5C,WAAW4C,mBAAoB,GACxFrC,aAAehF,YAAY0B,SAAS4F,kBAAmB7C,WAAW6C,kBAAmB,GACrFrC,WAAajF,YAAY0B,SAAS6F,kBAAmB9C,WAAW8C,kBAAmB,GACjFjI,aAAaU,YAAY0B,SAAS8F,mBAAoB/C,WAAW+C,mBAAoB,GACnFxH,YAAY0B,SAAS+F,mBAAoBhD,WAAWgD,mBAAoB,IAAM9I,SAGlFiE,MACE8E,KAAMzE,aACN0E,KAAMjD,UACNkD,cAAejD,gBAAiBE,YAAaC,gBAAiBC,cAAeC,aAAcC,YAC3F4C,cAAe/F,MAAMgG,WAErBC,WAAY3G,QAAQ0E,SAAS,WAAa1G,WAAaD,WAGzDwG,IAAMjD,WAAWsF,WAAW/E,cAE5BsB,UAAYoB,IAAIzB,MAChBK,WAAab,aACbc,QAAUd,aACVE,MAAQI,KAAOR,OAAS,GAExBK,MAAQI,MAAQF,WAAa,EAAIG,OAEjC,GAAIH,WAAY,CACdD,gBAAkBG,KAAOX,eACpB,CACLQ,gBAAmBR,WAAaD,aAAgBY,KAAOC,OAGzD,GAAI9B,UAAW,CACbyB,QAAUE,WAAaG,OAASA,OAAS,GACzCL,MAAQoE,KAAKC,IAAK5E,WAAeiB,UAAY,GAAMV,OACnDA,MAAQoE,KAAKE,IAAK7E,WAAaD,YAAgBkB,UAAY,GAAMV,OAGjEA,OAAS1B,KAAOW,OAAS,EACzBc,OAASzB,KAAOU,OAAS,MACpB,CACL,GAAIM,kBAAmB,CAErB,GAAIe,OAASK,UAAW,CACtBV,OAASE,WAAaS,SAAWA,QACjC,GAAIrC,KAAM,CACRyB,OAASf,OACTgB,OAASf,YAEN,CAEL,GAAIyB,UAAYT,gBAAiB,CAC/BD,OAASE,YAAcS,QAAUA,QACjCF,WAAaP,WAAa/E,aAAeD,eACzC,GAAIoD,MAAQ4B,WAAY,CACtBF,OAASf,YAEN,CAEL,GAAIiB,WAAY,CACdF,MAASI,KAAOC,MACd+D,KAAKC,IAAK3D,UAAYN,KAAOC,MAAQZ,WAAa,GAAKkB,QAEzDF,WAAatF,iBACR,CACL6E,MAAQI,KACNgE,KAAKC,IAAI3D,WAAajB,WAAaD,YAAcY,MAAO,GAAKO,QAC/DF,WAAavF,eAGf,GAAIoD,KAAM,CACR0B,OAASf,OACTc,OAASf,cAIV,CAEL,GAAIiB,iBAAmBS,UAAW,CAChCV,OAASE,YAAcS,QAAUA,QACjC,GAAIrC,MAAQ4B,WAAY,CACtBF,OAASf,OACTc,OAASd,YAEN,CAELe,OAASE,WAAaS,QAAUD,YAAcC,QAAUD,WACxD,GAAIpC,KAAM,CACR0B,OAASf,OACTc,OAASf,UAMjB,GAAIgB,MAASP,WAAaD,aAAgBQ,MAAQP,WAAY,CAC5DO,MAAQP,WAAa4B,SACrBZ,WAAavF,eAGf6D,KAAK,eAAiB0B,WAGtB1B,KAAKwF,EAAIvE,MACTjB,KAAKyF,EAAIzE,MACThB,KAAK+E,KAAOjD,UACZ9B,KAAK,eAAiB+B,gBAAiBE,YAAaC,gBAAiBC,cAAeC,aAAcC,YAClGrC,KAAK0F,QAAUzC,QAAU,EAAI,EAC7BJ,UAAY9D,iBAAiB4G,cAC3BC,GAAI9C,gBAAkB,OACtB+C,UAAWrE,mBACXsE,UAAWtH,QACXwB,KAAMA,KACNmD,UAAWF,SAAWE,SACtBM,MAAO,cAET,IAAKX,eAAgB,CACnBnC,QAAQ8C,MAAQZ,gBAEb,GAAIlC,QAAQ8C,MAAO,CACxB9C,QAAQ8C,MAAQ1E,iBAAiB4G,cAC/BC,GAAIjF,QAAQ8C,MACZqC,UAAWtH,WAIjBA,QAAQK,OAAOkH,WAAa,KAG9B,IAAIrK,WACFA,UAAW,SAAAA,UAAAF,cACTA,aAAawK,iBAAiB,eAAgB,SAAUC,OACtD,GAAIA,MAAMC,OAAOC,YAAc,UAAW,CACxC,IAAI3H,QAAUyH,MAAMC,OAClBE,sBAAwB5H,QAAQ6H,qBAElC7H,QAAQ6H,uBAAyB7H,QAAQ6H,qBAAuB,WAC9DD,sBAAsBvJ,MAAM2B,QAASxB,WAErC,IAAI0B,MAAQF,QAAQG,WAAW,SAC7BO,MAAQR,MAAMG,OAAOK,MACrB2C,WAAarD,QAAQG,WAAW,gBAChCG,SAAWN,QAAQK,OAAOC,SAC1BkB,KACAD,QAAU/C,UAAU,GACpB6B,OAASkB,SAAWA,QAAQlB,OAC5BkD,gBACAC,aACAC,YACAC,gBACAC,cACAC,aACAC,WAEF,GAAIxD,QAAUA,OAAOyH,OAASzH,OAAOyH,MAAM7C,OAAS5E,OAAOyH,MAAM7C,MAAMzD,KAAM,CAC3EA,KAAOnB,OAAOyH,MAAM7C,MAAMzD,KAC1BA,KAAK+E,KAAOxH,aAAaL,MAAM4B,SAASkF,eAAgBnC,WAAWmC,eAAgB9E,MAAM+E,YACvF7G,YAAY0B,SAASoF,eAAgBpF,SAASqF,WAAYtC,WAAWqC,eAAgBrC,WAAWsC,WAAY,MAE9GpC,gBAAmBjD,SAASsF,cAAgBvC,WAAWuC,aACrD7G,aAAaL,MAAM4B,SAASsF,aAAcvC,WAAWuC,cAAehH,YAAY0B,SAASuF,aACvFvF,SAASqF,WAAYtC,WAAWwC,aAAcxC,WAAWsC,WAAY,MAAQnI,MAEjFgG,aAAelF,cAAcgC,SAASwF,iBAAkBzC,WAAWyC,iBAAkBtI,OACrFiG,YAAcD,aAAezE,aAC3ByE,aAAc5E,YAAY0B,SAASyF,iBAAkBzF,SAASqF,WAC5DtC,WAAW0C,iBAAkB1C,WAAWsC,WAAY,MAAQnI,MAEhEkG,gBAAkB9E,YAAY0B,SAAS0F,qBAAsB3C,WAAW2C,qBAAsB,GAC9FrC,cAAgB/E,YAAY0B,SAAS2F,mBAAoB5C,WAAW4C,mBAAoB,GACxFrC,aAAehF,YAAY0B,SAAS4F,kBAAmB7C,WAAW6C,kBAAmB,GACrFrC,WAAajF,YAAY0B,SAAS6F,kBAAmB9C,WAAW8C,kBAAmB,GACjFjI,aAAaU,YAAY0B,SAAS8F,mBAAoB/C,WAAW+C,mBAAoB,GACnFxH,YAAY0B,SAAS+F,mBAAoBhD,WAAWgD,mBAAoB,IAAM9I,SAElFiE,KAAK,eAAiB+B,gBAAiBE,YAAaC,gBAAiBC,cAAeC,aAAcC,eAItG,GAAI5F,UAAU0B,QAAQK,QAAQ+H,YAAc,EAAG,CAC7C/H,QAAQgI,UAAYjI,gBAK5B5E,KAAM,6CACN8M,KAAM,YACNC,qBAAsB,yBAGThL","file":"fusioncharts.extension.customize-data-labels-at-dataset-level.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"FusionCharts\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"FusionCharts\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"FusionCharts\")) : factory(root[\"FusionCharts\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import FusionCharts from 'FusionCharts';\nimport extension from './extension';\nFusionCharts.addDep(extension);","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","\nlet startsRGBA = /^rgba/i,\n  cleanColorCode = /[#\\s]/ig,\n  COLOR_WHITE = 'FFFFFF',\n  UNDEF,\n  DASH_DEF = 'none',\n  BLANK = '',\n  COMMA = ',',\n  POSITION_MIDDLE = 'middle',\n  POSITION_START = 'start',\n  POSITION_END = 'end',\n  defined = function (obj) {\n    return obj !== UNDEF && obj !== null;\n  },\n  hiddenStr = 'hidden',\n  visibleStr = 'visible',\n  chartList = ['bar2D', 'bar3D'];\n\nfunction getDashStyle (len, gap, apply) {\n  return (apply || apply === UNDEF) ? [len, gap] : DASH_DEF;\n}\n\nfunction getFirstValue () {\n  var arg,\n    i,\n    l;\n  for (i = 0, l = arguments.length; i < l; i += 1) {\n    arg = arguments[i];\n    if (!arg && arg !== false && arg !== 0) {\n      continue;\n    }\n    return arg;\n  }\n  return BLANK;\n}\n\nfunction pluck () {\n  var arg, i, l;\n  for (i = 0, l = arguments.length; i < l; i += 1) {\n    arg = arguments[i];\n    if (!arg && arg !== false && arg !== 0) {\n      continue;\n    }\n    return arg;\n  }\n  return undefined;\n}\n\nfunction pluckNumber () {\n  var arg,\n    i,\n    l;\n\n  for (i = 0, l = arguments.length; i < l; i += 1) {\n    arg = arguments[i];\n    if (!arg && arg !== false && arg !== 0) {\n      continue;\n    } else if (isNaN(arg = Number(arg))) {\n      continue;\n    }\n    return arg;\n  }\n  return undefined;\n}\n\nfunction convertColor (color, alpha, rgba) {\n  var R = 0, G = 0, B = 0, colorStr, tempArr;\n\n  if (rgba && rgba.match(startsRGBA)) {\n    tempArr = rgba.split(COMMA);\n    R = tempArr[0].slice(tempArr[0].indexOf('(') + 1);\n    G = tempArr[1];\n    B = tempArr[2];\n    if (!alpha && alpha !== 0) {\n      alpha = parseInt((tempArr[3].slice(0, tempArr[3].indexOf(')')) * 100), 10);\n    }\n  }\n  if (color) {\n    if (color.match(startsRGBA)) {\n      tempArr = color.split(COMMA);\n      R = tempArr[0].slice(tempArr[0].indexOf('(') + 1);\n      G = tempArr[1];\n      B = tempArr[2];\n    } else {\n      colorStr = color.replace(cleanColorCode, BLANK).split(COMMA)[0];\n      switch (colorStr.length) {\n        case 3:\n          colorStr = colorStr.charAt(0) + colorStr.charAt(0) + colorStr.charAt(1) +\n            colorStr.charAt(1) + colorStr.charAt(2) + colorStr.charAt(2);\n          break;\n        case 6:\n          break;\n        default:\n          colorStr = (colorStr + COLOR_WHITE).slice(0, 6);\n          break;\n      }\n      R = parseInt(colorStr.slice(0, 2), 16) || 0;\n      G = parseInt(colorStr.slice(2, 4), 16) || 0;\n      B = parseInt(colorStr.slice(4, 6), 16) || 0;\n    }\n  }\n\n  if (!alpha && alpha !== 0) {\n    alpha = 100;\n  }\n  if (typeof alpha === 'string') {\n    alpha = alpha.split(COMMA)[0];\n  }\n  alpha = parseInt(alpha, 10) / 100;\n  return 'rgba(' + R + COMMA + G + COMMA + B + COMMA + alpha + ')';\n}\n\nfunction _drawLabel () {\n  var dataSet = this,\n    chart = dataSet.getFromEnv('chart'),\n    chartConf = chart.config,\n    JSONData = dataSet.config.JSONData,\n    animationManager = dataSet.getFromEnv('animationManager'),\n    canvasConf = chart.getChildren('canvas')[0].config,\n    style = chart.config.dataLabelStyle,\n    setDataArr = JSONData.data,\n    categories = chart.config.categories,\n    is3D = chart.config.is3D,\n    isStacked = chart.config.isstacked,\n    catLen = categories && categories.length,\n    dataSetLen = setDataArr && setDataArr.length,\n    len,\n    dataStore = dataSet.getData(),\n    SmartLabel = chart.getFromEnv('smartLabel'),\n    dataObj,\n    attr,\n    yDepth = canvasConf.yDepth,\n    xDepth = canvasConf.xDepth,\n    numberFormatter = chart.getFromEnv('number-formatter'),\n    i,\n    j,\n    displayValue = '',\n    setData,\n    placeValuesInside = chartConf.placevaluesinside,\n    canvasWidth = chartConf.canvasWidth,\n    canvasLeft = chartConf.canvasLeft,\n    graphic,\n    height,\n    gutter = 2,\n    valuePadding = chartConf.valuepadding + gutter,\n    textY,\n    textX,\n    outsideColSpace,\n    isNegative,\n    yPos,\n    xPos,\n    width,\n    setValue,\n    dataLabelContainer = dataSet.getContainer('labelGroup'),\n    textAnchor,\n    textWidth,\n    xAdjust,\n    chartAttrs = dataSet.getFromEnv('chart-attrib'),\n    fillColor,\n    backgroundColor,\n    fontBdrColor,\n    borderColor,\n    borderThickness,\n    borderPadding,\n    borderRadius,\n    borderDash,\n    GUTTER_4 = 4,\n    skipInfo = dataSet.getSkippingInfo && dataSet.getSkippingInfo(),\n    skippingApplied = skipInfo && skipInfo.skippingApplied,\n    plotDrawArray = (skipInfo && skipInfo.labelDraw) || [],\n    plotDrawArrayLength = plotDrawArray.length,\n    config,\n    plotLabel,\n    plotLabelCheck,\n    dim,\n    tempGraphics,\n    visible = dataSet.getState('visible'),\n    callback = function () {\n      this.hide();\n    };\n\n  visible && dataLabelContainer.show();\n  SmartLabel.setStyle(style);\n  len = skippingApplied ? plotDrawArrayLength : (catLen < dataSetLen ? catLen : dataSetLen);\n\n  for (j = 0; j < len; j++) {\n    i = skippingApplied ? plotDrawArray[j] : j;\n    dataObj = dataStore[i];\n    config = dataObj && dataObj.config;\n    setValue = config && config.setValue;\n    // Condition arises when user has removed data in real time update\n    if (dataObj === UNDEF || setValue === UNDEF || setValue === null || config.labelSkip === true) {\n      tempGraphics = dataObj && dataObj.graphics;\n      if (tempGraphics) {\n        tempGraphics.label && tempGraphics.label.hide();\n      }\n\n      config && (delete config.labelSkip);\n\n      continue;\n    }\n    graphic = dataObj.graphics;\n\n    // Condition arises when feedData enters less number of data in a dataset compared to the other.\n    if (!graphic) {\n      continue;\n    }\n\n    setData = setDataArr[i];\n    yPos = dataObj._yPos;\n    xPos = dataObj._xPos;\n    setValue = numberFormatter.getCleanValue(setData.value);\n    isNegative = pluckNumber(setValue) < 0;\n    height = dataObj._height;\n    width = dataObj._width;\n\n    textAnchor = isStacked ? POSITION_MIDDLE : (isNegative ?\n      /** @todo this boolean check needs optimisation */\n      (placeValuesInside ? POSITION_START : POSITION_END) :\n      (placeValuesInside ? POSITION_END : POSITION_START));\n    displayValue = config.displayValue;\n    plotLabelCheck = graphic.label;\n    // Dont draw values if the respective conditions are not satisfied\n    if (config.showValue && defined(displayValue) && displayValue !== BLANK && setValue !== null) {\n      fillColor = convertColor(pluck(JSONData.valuefontcolor, chartAttrs.valuefontcolor, style.inCancolor),\n        pluckNumber(JSONData.valuefontalpha, JSONData.valuealpha, chartAttrs.valuefontalpha, chartAttrs.valuealpha, 100));\n\n      backgroundColor = (JSONData.valuebgcolor || chartAttrs.valuebgcolor) ?\n        convertColor(pluck(JSONData.valuebgcolor, chartAttrs.valuebgcolor), pluckNumber(JSONData.valuebgalpha,\n          JSONData.valuealpha, chartAttrs.valuebgalpha, chartAttrs.valuealpha, 100)) : BLANK;\n\n      fontBdrColor = getFirstValue(JSONData.valuebordercolor, chartAttrs.valuebordercolor, BLANK);\n      borderColor = fontBdrColor ? convertColor(\n        fontBdrColor, pluckNumber(JSONData.valueborderalpha, JSONData.valuealpha,\n          chartAttrs.valueborderalpha, chartAttrs.valuealpha, 100)) : BLANK;\n\n      borderThickness = pluckNumber(JSONData.valueborderthickness, chartAttrs.valueborderthickness, 1);\n      borderPadding = pluckNumber(JSONData.valueborderpadding, chartAttrs.valueborderpadding, 2);\n      borderRadius = pluckNumber(JSONData.valueborderradius, chartAttrs.valueborderradius, 0);\n      borderDash = pluckNumber(JSONData.valueborderdashed, chartAttrs.valueborderdashed, 0) ?\n        getDashStyle(pluckNumber(JSONData.valueborderdashlen, chartAttrs.valueborderdashlen, 4),\n          pluckNumber(JSONData.valueborderdashgap, chartAttrs.valueborderdashgap, 2)) : DASH_DEF;\n\n      // Preparing the attributes of the text\n      attr = {\n        text: displayValue,\n        fill: fillColor,\n        'text-bound': [backgroundColor, borderColor, borderThickness, borderPadding, borderRadius, borderDash],\n        'line-height': style.lineHeight,\n        // todo-text direction missing\n        visibility: dataSet.getState('visible') ? visibleStr : hiddenStr\n      };\n\n      dim = SmartLabel.getOriSize(displayValue);\n\n      textWidth = dim.width;\n      textWidth += valuePadding;\n      xAdjust = valuePadding;\n      textY = yPos + height * 0.5;\n\n      textX = xPos + (isNegative ? 0 : width);\n\n      if (isNegative) {\n        outsideColSpace = xPos - canvasLeft;\n      } else {\n        outsideColSpace = (canvasLeft + canvasWidth) - (xPos + width);\n      }\n      // For stacked charts values are always placed at middle\n      if (isStacked) {\n        textX += (isNegative ? width : -width) * 0.5;\n        textX = Math.max((canvasLeft) + (textWidth * 0.5), textX);\n        textX = Math.min((canvasLeft + canvasWidth) - (textWidth * 0.5), textX);\n        // If 3D chart then xDepth and yDepth is also to be considered for\n        // calculating x y position\n        textX -= is3D ? xDepth : 0;\n        textY += is3D ? yDepth : 0;\n      } else {\n        if (placeValuesInside) {\n          // If label fits inside the data plot\n          if (width >= textWidth) {\n            textX += isNegative ? xAdjust : -xAdjust;\n            if (is3D) {\n              textY += yDepth;\n              textX -= xDepth;\n            }\n          } else {\n            // If label fits outside the data plot\n            if (textWidth < outsideColSpace) {\n              textX += isNegative ? -xAdjust : xAdjust;\n              textAnchor = isNegative ? POSITION_END : POSITION_START;\n              if (is3D && isNegative) {\n                textX -= xDepth;\n              }\n            } else {\n              // Label management for negative values\n              if (isNegative) {\n                textX = (xPos + width) +\n                  Math.max((textWidth - xPos - width + canvasLeft), 0) - xAdjust;\n                // If negative value then drawing text from end\n                textAnchor = POSITION_END;\n              } else {\n                textX = xPos -\n                  Math.max(textWidth - (canvasLeft + canvasWidth - xPos), 0) + xAdjust;\n                textAnchor = POSITION_START;\n              }\n              // Taking xDepth yDepth into consideration for 3d charts\n              if (is3D) {\n                textX -= xDepth;\n                textY += yDepth;\n              }\n            }\n          }\n        } else {\n          // If space is available inside plot\n          if (outsideColSpace >= textWidth) {\n            textX += isNegative ? -xAdjust : xAdjust;\n            if (is3D && isNegative) {\n              textX -= xDepth;\n              textY += xDepth;\n            }\n          } else {\n            // If space not available inside plot\n            textX += isNegative ? xAdjust + textWidth : -(xAdjust + textWidth);\n            if (is3D) {\n              textX -= xDepth;\n              textY += yDepth;\n            }\n          }\n        }\n      }\n      // If value gets out of canvas\n      if (textX > (canvasLeft + canvasWidth) || textX < canvasLeft) {\n        textX = canvasLeft + GUTTER_4;\n        textAnchor = POSITION_START;\n      }\n\n      attr['text-anchor'] = textAnchor;\n\n      // If label is not created then create it\n      attr.x = textX;\n      attr.y = textY;\n      attr.fill = fillColor;\n      attr['text-bound'] = [backgroundColor, borderColor, borderThickness, borderPadding, borderRadius, borderDash];\n      attr.opacity = visible ? 1 : 0;\n      plotLabel = animationManager.setAnimation({\n        el: plotLabelCheck || 'text',\n        container: dataLabelContainer,\n        component: dataSet,\n        attr: attr,\n        callback: !visible && callback,\n        label: 'plotLabel'\n      });\n      if (!plotLabelCheck) {\n        graphic.label = plotLabel;\n      }\n    } else if (graphic.label) {\n      graphic.label = animationManager.setAnimation({\n        el: graphic.label,\n        component: dataSet\n      });\n    }\n  }\n  dataSet.config.labelDrawn = true;\n};\n\nvar extension = {\n  extension: FusionCharts => {\n    FusionCharts.addEventListener('instantiated', function (event) {\n      if (event.sender.getType() === 'dataset') {\n        var dataSet = event.sender,\n          _parseLabelAttributes = dataSet.parseLabelAttributes;\n\n        dataSet.parseLabelAttributes && (dataSet.parseLabelAttributes = function () {\n          _parseLabelAttributes.apply(dataSet, arguments);\n\n          var chart = dataSet.getFromEnv('chart'),\n            style = chart.config.style,\n            chartAttrs = dataSet.getFromEnv('chart-attrib'),\n            JSONData = dataSet.config.JSONData,\n            attr,\n            dataObj = arguments[0],\n            config = dataObj && dataObj.config,\n            backgroundColor,\n            fontBdrColor,\n            borderColor,\n            borderThickness,\n            borderPadding,\n            borderRadius,\n            borderDash;\n\n          if (config && config.props && config.props.label && config.props.label.attr) {\n            attr = config.props.label.attr;\n            attr.fill = convertColor(pluck(JSONData.valuefontcolor, chartAttrs.valuefontcolor, style.inCancolor),\n              pluckNumber(JSONData.valuefontalpha, JSONData.valuealpha, chartAttrs.valuefontalpha, chartAttrs.valuealpha, 100));\n\n            backgroundColor = (JSONData.valuebgcolor || chartAttrs.valuebgcolor) ?\n              convertColor(pluck(JSONData.valuebgcolor, chartAttrs.valuebgcolor), pluckNumber(JSONData.valuebgalpha,\n                JSONData.valuealpha, chartAttrs.valuebgalpha, chartAttrs.valuealpha, 100)) : BLANK;\n\n            fontBdrColor = getFirstValue(JSONData.valuebordercolor, chartAttrs.valuebordercolor, BLANK);\n            borderColor = fontBdrColor ? convertColor(\n              fontBdrColor, pluckNumber(JSONData.valueborderalpha, JSONData.valuealpha,\n                chartAttrs.valueborderalpha, chartAttrs.valuealpha, 100)) : BLANK;\n\n            borderThickness = pluckNumber(JSONData.valueborderthickness, chartAttrs.valueborderthickness, 1);\n            borderPadding = pluckNumber(JSONData.valueborderpadding, chartAttrs.valueborderpadding, 2);\n            borderRadius = pluckNumber(JSONData.valueborderradius, chartAttrs.valueborderradius, 0);\n            borderDash = pluckNumber(JSONData.valueborderdashed, chartAttrs.valueborderdashed, 0) ?\n              getDashStyle(pluckNumber(JSONData.valueborderdashlen, chartAttrs.valueborderdashlen, 4),\n                pluckNumber(JSONData.valueborderdashgap, chartAttrs.valueborderdashgap, 2)) : DASH_DEF;\n\n            attr['text-bound'] = [backgroundColor, borderColor, borderThickness, borderPadding, borderRadius, borderDash];\n          }\n        });\n\n        if (chartList.indexOf(dataSet.getName()) >= 0) {\n          dataSet.drawLabel = _drawLabel;\n        }\n      }\n    });\n  },\n  name: 'customise-data-labels-at-dataset-level-ext',\n  type: 'extension',\n  requiresFusionCharts: true\n};\n\nexport default extension;\n"],"sourceRoot":""}